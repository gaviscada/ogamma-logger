{
  "server": {
    "ipAddress": "0.0.0.0",
    "port": 4880,
    "docRoot": "./public_html",
    "threads": 4
  },
  "configDb": {
    "type": "PostgreSQL",
    "dbName": "ogammaloggerconfig",
    "displayName": "Local PostgreSQL database",
    "host": "tsdb",
    "port": 5432,
    "userName": "ogamma",
    "password": "ogamma",
    "initScript": "./init-config-db-postgre.sql",
    "connectionWaitTimeInSeconds": 15
  },
  "appLog": {
    "fileName": "./data/[InstanceId]/logs/app-log.txt",
    "level": 0
  },
  "sdk": {
    "ioThreads": 2,
    "callbackThreads": 16,
    "certificatesRootFolder": "./data/[InstanceId]/PKI",
    "log": {
      "fileName": "./data/[InstanceId]/logs/sdk-log.txt",
      "level": 0
    }
  },
  "collector-agent": {
    "id": 1,
    "enabled": true
  },
  "rest-endpoint": {
    "enabled": true
  },
  "config-endpoint": {
    "enabled": true
  },
  "tsdb-disabled": false,
  "timeSeriesDataBases": [
    {
      "type": "PostgreSQL",
      "displayName": "PostgreSQL database at host tsdb",
      "host": "tsdb",
      "port": 5432,
      "dbName": "ogammalogger",
      "userName": "ogamma",
      "password": "ogamma",
      "initScript": "./init-db-postgres.sql",
      "connectionWaitTimeInSeconds": 15,
      "numberOfValuesInWriteBatch": 1000,
      "maxWriteInterval": 500
    },
    {
      "type": "InfluxDb",
      "version": "1.7",
      "displayName": "InfluxDb 1.7 at localhost",
      "host": "influxdb",
      "port": 8086,
      "useSecureMode": false,
      "dbName": "ogammadb",
      "userName": "ogamma",
      "password": "ogamma",
      "connectionWaitTimeInSeconds": 15,
      "maxQueueSize": 20000,
      "numberOfValuesInWriteBatch": 5000,
      "maxWriteInterval": 500
    },
    {
      "type": "InfluxDb",
      "version": "2.0",
      "displayName": "InfluxDb 2.0 at localhost",
      "host": "influxdb2",
      "port": 9999,
      "useSecureMode": false,
      "dbName": "ogammadb",
      "userName": "ogamma",
      "password": "ogamma123",
      "organization": "ogamma",
      "bucket": "ogamma",
      "token": "secrettoken",
      "precision": "ms",
      "connectionWaitTimeInSeconds": 15,
      "maxQueueSize": 20000,
      "numberOfValuesInWriteBatch": 5000,
      "maxWriteInterval": 500
    },
    {
      /* Example configuration settings for local Kafka. Should work for instance running in Docker container, started by using file docker-kafka/docker-compose.yml */
      "type": "Kafka",
      "displayName": "Kafka database at localhost",
      "connectionWaitTimeInSeconds": 15,
      "maxQueueSize": 500000,
      "numberOfValuesInReadBatch": 1000,
      "numberOfValuesInWriteBatch": 1000,
      "maxWriteInterval": 500,
      "timeout": 10000,

      "Kafka": {
        "sasl.username": "user",
        "sasl.password": "bitnami",
        "topicNameGenerationMode": "3",
        "keyNameGenerationMode": "1",
        "metadata.broker.list": "kafka:9092",
        "broker.version.fallback": "0.10.0.0",
        "sasl.mechanisms": "PLAIN",
        "security.protocol": "PLAINTEXT",
        "client.id": "VisualLogger",
        "batch.num.messages": 1000,
        "queue.buffering.max.ms": 500,
        "Producer": {
          "timeout": 2000,
          "auto.commit.interval.ms": 500,
          "client.id": "VisualLogger-Producer"
        },
        "Consumer": {
          "timeout": 500,
          "client.id": "VisualLogger-Consumer",
          "group.id": "VisualLogger",
          "enable.auto.commit": false,
          "auto.offset.reset": "latest",
          "fetch.wait.max.ms": 10
        }
      }
    }
  ]
}	